<form class="contact-form" id="contact-form">
  <div class="form-group">
    <label for="name">Name</label>
    <input type="text" id="name" name="name" required />
    <span class="error-message" id="name-error"></span>
  </div>
  <div class="form-group">
    <label for="email">Email</label>
    <input type="email" id="email" name="email" required />
    <span class="error-message" id="email-error"></span>
  </div>
  <div class="form-group">
    <label for="message">Message</label>
    <textarea id="message" name="message" rows="6" required></textarea>
    <span class="error-message" id="message-error"></span>
  </div>
  <button type="submit" class="submit-button">Send Message</button>
  <div id="form-status" class="form-status"></div>
</form>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const contactForm = document.getElementById('contact-form');
    const formStatus = document.getElementById('form-status');

    if (contactForm) {
      contactForm.addEventListener('submit', function (e) {
        e.preventDefault();

        // Reset error messages
        document.querySelectorAll('.error-message').forEach((el) => {
          el.textContent = '';
        });

        // Validate form
        let isValid = true;
        const name = this.name.value.trim();
        const email = this.email.value.trim();
        const message = this.message.value.trim();

        if (!name) {
          document.getElementById('name-error').textContent = 'Please enter your name';
          isValid = false;
        }

        if (!email) {
          document.getElementById('email-error').textContent = 'Please enter your email';
          isValid = false;
        } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
          document.getElementById('email-error').textContent = 'Please enter a valid email address';
          isValid = false;
        }

        if (!message) {
          document.getElementById('message-error').textContent = 'Please enter a message';
          isValid = false;
        }

        if (isValid) {
          // Show loading state
          formStatus.textContent = 'Sending message...';
          formStatus.className = 'form-status loading';

          // In a real application, you would send data to your server here
          // For now, we'll simulate a successful submission after a delay
          setTimeout(() => {
            // Reset the form
            contactForm.reset();

            // Show success message
            formStatus.textContent = 'Your message has been sent successfully!';
            formStatus.className = 'form-status success';

            // Clear success message after 5 seconds
            setTimeout(() => {
              formStatus.textContent = '';
              formStatus.className = 'form-status';
            }, 5000);
          }, 1000);
        }
      });
    }
  });
</script>

<style>
  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group label {
    margin-bottom: 0.5rem;
  }

  .form-group input,
  .form-group textarea {
    padding: 0.8rem;
    background-color: var(--secondary-color);
    border: 1px solid #333;
    border-radius: var(--border-radius);
    color: var(--primary-color);
    resize: vertical;
  }

  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--accent-color);
  }

  .submit-button {
    padding: 0.8rem 1.5rem;
    background-color: var(--accent-color);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-weight: bold;
    transition: all var(--transition-speed) ease;
    align-self: flex-start;
  }

  .submit-button:hover {
    background-color: var(--hover-color);
  }

  .error-message {
    color: #ff3860;
    font-size: 0.8rem;
    margin-top: 0.25rem;
    display: block;
  }

  .form-status {
    margin-top: 1rem;
    padding: 0.5rem 0;
  }

  .form-status.loading {
    color: #3273dc;
  }

  .form-status.success {
    color: #48c774;
  }

  .form-status.error {
    color: #ff3860;
  }
</style>
