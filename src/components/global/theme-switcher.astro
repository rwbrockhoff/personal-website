<button id="theme-toggle" class="theme-toggle flex-center" aria-label="Toggle dark mode">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="icon-sun"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="icon-moon"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<script>
  const setTheme = (theme: string) => {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  };

  const toggleTheme = () => {
    const currentTheme = localStorage.getItem('theme') || 'light';
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
  };

  const getPreferredTheme = () => {
    const savedTheme = localStorage.getItem('theme');

    if (savedTheme) return savedTheme;
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };

  const initTheme = () => {
    // Set the theme passing in preferred theme
    setTheme(getPreferredTheme());

    // Attach click event to toggle button
    const themeToggle = document.getElementById('theme-toggle');
    if (themeToggle) {
      themeToggle.addEventListener('click', toggleTheme);
    }
  };

  // Add listener for page load and astro page load
  document.addEventListener('DOMContentLoaded', initTheme);
  document.addEventListener('astro:page-load', initTheme);

  // Watch for OS theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      setTheme(e.matches ? 'dark' : 'light');
    }
  });
</script>

<style>
  .theme-toggle {
    background: none;
    color: var(--text-color);
    border: none;
    cursor: pointer;
    width: 40px;
    height: 40px;
    position: relative;
    transition: transform var(--transition);
  }

  .theme-toggle:hover {
    transform: scale(1.1);
  }

  .theme-toggle svg {
    width: 20px;
    height: 20px;
    position: absolute;
  }

  /* White icons when header is NOT scrolled (at top of page) */
  :global(header:not(.scrolled-header)) .icon-sun,
  :global(header:not(.scrolled-header)) .icon-moon {
    color: white;
  }

  /* Default text color for other situations */
  .icon-sun,
  .icon-moon {
    color: var(--text-color);
  }

  /* Slow rotation animation for sun icon only */
  .icon-sun {
    animation: rotate 30s linear infinite;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  :root .icon-moon {
    opacity: 0;
  }

  :root .icon-sun {
    opacity: 1;
  }

  :global([data-theme='dark']) .icon-sun {
    opacity: 0;
  }

  :global([data-theme='dark']) .icon-moon {
    opacity: 1;
  }
</style>
