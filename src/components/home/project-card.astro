---
import { Image } from 'astro:assets';

export interface Props {
  title: string;
  description: string;
  highlights: string[];
  imageSrc: string;
  tags: string[];
  demoLink: string;
  githubLink: string;
  deviceImageSrc: ImageMetadata;
  isWeb: boolean;
}

const {
  title,
  description,
  highlights,
  imageSrc,
  tags,
  demoLink,
  githubLink,
  deviceImageSrc,
  isWeb,
} = Astro.props;

// Assigns a class that changes the size of our demo GIF based on the platform (web/mobile)
const containerClass = `screen-wrapper flex-center ${isWeb ? 'screen-container' : 'mobile-screen-container'}`;
---

<div class="project-card mobile-flex-col mobile-margin-auto">
  <div class="project-panel-left mobile-width-100">
    <div class="project-header mobile-flex-col">
      <div class="project-tab flex-center mobile-width-100">
        <h4>{title}</h4>
      </div>

      <div class="project-links mobile-width-100">
        {
          demoLink && (
            <a
              href={demoLink}
              class="project-link button"
              target="_blank"
              rel="noopener noreferrer"
            >
              Live Site
            </a>
          )
        }

        <a href={githubLink} class="project-link button" target="_blank" rel="noopener noreferrer"
          >GitHub</a
        >
      </div>
    </div>

    <div class="project-info">
      <p>{description}</p>
      <ul>
        {highlights.map((item) => <li>{item}</li>)}
      </ul>
      <div class="project-tags">
        {tags.map((tag) => <span class="tag">{tag}</span>)}
      </div>
    </div>
  </div>
  <div class="project-panel-right mobile-width-100">
    <div class="project-image mobile-width-100">
      <Image src={deviceImageSrc} alt={isWeb ? 'Macbook' : 'iPhone'} loading="lazy" />
      <div class={containerClass}>
        <img
          src={imageSrc}
          class="project-demo"
          alt={`GIF demo of Ryan's ${title} project.`}
          loading="lazy"
        />
      </div>
    </div>
  </div>
</div>

<style>
  @layer components {
    .project-card {
      background-color: var(--background);
      color: var(--text-color);
      border-radius: var(--border-radius);
      overflow: hidden;
      position: relative;
      display: flex;
      margin: 5rem 2.5rem;
      transition: all var(--transition);
    }

    .project-card:hover {
      box-shadow: var(--shadow-light);
    }

    .project-panel-left {
      width: 65%;
    }

    .project-panel-right {
      width: 35%;
    }

    .project-header {
      display: flex;
      flex-wrap: wrap;
    }

    .project-tab {
      background-color: var(--background-dark);
      width: 250px;
      height: 4rem;
      border-bottom-right-radius: var(--border-radius);
      margin-right: var(--space-3);
      margin-bottom: var(--space-3);
    }
    .project-image {
      height: 100%;
      width: 90%;
      overflow: hidden;
      position: relative;
    }

    .project-image img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    /* Devices & Screens */
    .screen-wrapper {
      overflow: hidden;
      position: absolute;
    }

    .screen-container {
      top: 14%;
      left: 16%;
      width: 68%;
      height: 70%;
    }

    .mobile-screen-container {
      top: 25%;
      left: 37%;
      width: 24%;
      height: 50%;
    }

    .project-demo {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .project-info {
      padding: var(--space-8);
      padding-left: var(--space-8);
    }

    .project-tags {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-2);
      margin: var(--space-8) 0;
    }

    .project-links {
      display: flex;
      align-items: center;
      gap: var(--space-6);
      margin-left: var(--space-4);
    }

    @media (max-width: 768px) {
      .project-card {
        box-shadow: var(--shadow-light);
      }

      .project-links {
        justify-content: center;
        margin: 0 0 var(--space-4) 0;
      }

      .project-info {
        padding: 0 var(--space-4);
      }
    }
  }
</style>
